오늘은 SRS개발 2일차, 이번엔 핵심 포인트를 정리해서 개발에 들어가자

회전에 따른 테스트 케이스는 다음과 같다.
(기존 코드에서 사용하는 회전 인덱스를 기준으로 정리한다)
-시계방향 회전(x)
<J/L/S/T/Z미노 월킥 데이터>
0->1 : (0, 0) / (-1, 0) / (-1, 1) / (0, -2) / (-1, -2)
1->2 : (0, 0) / (1, 0) / (1, -1) / (0, 2) / (1, 2)
2->3 : (0, 0) / (1, 0) / (1, 1) / (0, -2) / (1, -2)
3->0 : (0, 0) / (-1, 0) / (-1, -1) / (0, 2) / (-1, 2)

<I미노 월킥 데이터>
0->1 : (0, 0) / (-2, 0) / (1, 1) / (1, 2) / (-2, -1)
1->2 : (0, 0) / (-1, 0) / (2, 0) / (-1, 2) / (2, -1)
2->3 : (0, 0) / (2, 0) / (-1, 0) / (2, 1) / (-1, -1)
3->0 : (0, 0) / (-2, 0) / (1, 0) / (-2, 1) / (1, -2)

-반시계방향 회전(z)
<J/L/S/T/Z미노 월킥 데이터>
0->3 : (0, 0) / (1, 0) / (1, 1) / (0, -2) / (1, -2)
3->2 : (0, 0) / (-1, 0) / (-1, -1) / (0, 2) / (-1, 2)
2->1 : (0, 0) / (-1, 0) / (-1, 1) / (0, -2) / (-1, -2)
1->0 : (0, 0) / (1, 0) / (1, -1) / (0, 2) / (1, 2)

<I미노 월킥 데이터>
0->3 : (0, 0) / (2, 0) / (-1, 0) / (-1, 2) / (2, -1)
3->2 : (0, 0) / (1, 0) / (-2, 0) / (1, 2) / (-2, -1)
2->1 : (0, 0) / (-2, 0) / (1, 0) / (-2, 1) / (1, -1)
1->0 : (0, 0) / (2, 0) / (-1, 0) / (2, 1) / (-1, -2)

즉, 회전할때, for문을 통해서 5번 테스트 하도록 하고
테스트 케이스를 block wallkickData_normal(I)[8][5]에 저장하여 테스트하면 된다.

한번..해보자!
일단, 월킥 데이터를 저장하는 함수를 만든다.
0 / 1 / 2 / 3상태를 지정해놓은 데이터를 저장하고
(기존상태) - (변화할 상태)로 좌표값을 움직이면 된다.

I미노는 애매하니 월킥 데이터를 모두 저장하자

이제 기존 월킥하던 곳에
좌표에 따라 총 5번 테스트하도록 하자 
I를 제외한 좌표는 wallkickData_normal[blockRot] - wallkickData_normal[blockRot + 4 + rotDir) % 4]값을 좌표에 더하면된다.
I는 상황에따라서 맞춘다.

개발 시작

의도에 맞춰서 성공적으로 개발했고

T스핀(TSD, TST) 성공으로 오늘 개발을 마친다.