오늘 해야하는 개발은 고스트 시스템 개선과 조작개선(DAS)이다.
저번부터 느낀 계획적 개발을 하도록 노력하면서 고스트 시스템을 먼저 개선해보자.
현재 고스트는 다 좋지만, 다른 출력보다 우선순위가 높은 것이 문제이다.

이에 대한 해결점으로 떠오르는 것은 다음과 같다.
 - 출력에 대한 내용을 한 곳에 모아 처리한다.
   > 기존 preloadBlockQueue로 처리하던 것을 preloadBoard 즉, 보드 전체로 확장해서
      모든 연산이 끝난 다음 board에 적용 및 출력하는 것이다.
 - 고스트 출력에 대한 부분을 다른 출력보다 앞당긴다.

그런데, 나중에 할 개발을 위해서라도 preloadBoard로 처리하는 것은 꽤나 괜찮은
아이디어라고 생각한다. 그저 약간 개발에 난이도가 있어 보일 뿐이다.
기존에 preloadBoard시스템을 적용하지 않은 이유는 시뮬레이션에서 불가능한
연산을 발견했을 때, preloadBoard를 이전으로 되돌리는 것이 불편했기 때문이다.
이에 대한 해결 방안으로 기존에 preloadBlockQueue를 살린 상태에서 preloadBoard
시스템을 추가하는 방법이 있다!

약간 복잡할거 같은 느낌이 풍기지만, 한번 시도해보자!
일단, preloadBoard변수를 만든다.
그런 후, 기존 함수에서 바로 board값을 수정하던 것을 preloadBoard에 수정하도록 만든다.
그리고 reloadBoard()함수를 만들어서 board값과, preloadBoard값을 비교하여
다른 부분을 수정하고 출력하도록 한다. (더블 버퍼링)
이 과정에서, 고스트는 reloadBlock에서 처리하고 reloadBoard는 후에 처리하도록 하여
고스트의 출력 우선순위를 뒤로 미룬다.
해보자

음.. board에 즉각즉각 변화가 적용이 되어야.. 하는 듯 하다.
처음부터 그렇게 설계하지 않았지 때문에, 이곳 저곳에서 충돌하는게 많아 보인다.
하는 수 없이 board부분은 그대로 살리고, 출력만 후에 하도록 하자

이렇게 하면, 블록을 움직일 경우 움직이기 전, 움직인 후 모두 같은 위치에 있는 블록
 ex) 사각형을 오른쪽으로 움직이면 2, 4번 블록은 겹친다.
은 여전히 고스트로 보인다. 따라서, 고스트가 해당 자리에 자기자신이 있으면
출력이 불가능하게 만들어보자

이제는 하나 빼고 다 완벽해졌다.
홀드를 할 때 기존 블록이 있던 곳은 고스트가 잠깐동안은 생기지 않는다.
그 이유는 고스트 < 해당 블록 출력 삭제 이기 때문이다.
얘는 어떻게 해결해야할지.. 난감하다.
일단은, 당장 급한 버그가 아니기 때문에 넘어가도록 하자 (극히 한정적인 버그이다.)

자 다음은, 조작 개선이다.

일단 조작 개선해야 하는 부분은
1. 특정 키는 꾹 눌러도 한번만 입력될 것
2. 한번에 두번 조작이 되지 않도록 할 것
3. DAS

일단 1번, 2번을 동시에 해결할 KEY_DOWN을 한번 찾아보자
.. 찾아보는게 아니라 직접 만들면 되지않나?

키를 누르는 순간 변수 하나를 TRUE로 만드는 것이다.
그러고 time변수하나를 만들어서 딜레이를 제공하여
DAS도 구현하는 것이다.
흥미롭다 한번 해보자

일단, 한번만 입력되어야 하는 키는 keydown_(키)변수를 만든 뒤
누를 경우 keydown을 1로 만들고, 더이상 작동하지 않도록 한다.
그리고 키를 뗄 경우 keydown을 0으로 만든다.
꾹 눌러도 되는 키도 keydown변수를 만들어두자
가자!

하다보니 라인이 지워질때 고스트가 사라지지 않는 버그가 있다 세상에..
그래도 일단 조작에 집중하자
일단 한번만 입력되는것은 스무스하게 구현되었다.
여기에 기존 딜레이를 이용하여 꾹 누르는 것도 구현해보자
아마 keydown || 딜레이시간이 지난경우 를 통해 가능할 것이다.

음.. 생각보다 안되네 다음 개발때 도전해보자