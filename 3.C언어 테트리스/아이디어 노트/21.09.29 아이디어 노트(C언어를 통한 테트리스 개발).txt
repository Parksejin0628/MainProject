조작하고 있는 블록을 queue에 넣어서 쉽게 할 수 있지 않을까?
블록 밑부분부터 queue에 넣으면 블록 밑에 뭐가 있다! 도 쉽게 판별 가능할텐데!

blockQueue[4]해서 좌표를 나타내는 거지
그래서 블록이 떨어질 때 board[blockQueue[4].y-1][blockQueue[4].x]값을 파악하는거지!
파악방법은 크게 2가지로
1. 블록 밑부분부터 한 칸씩 떨어트리는 시뮬레이션을 해본다. 문제없이 떨어진다면 한칸 낙하, 문제가 발생한다면 블록설치
2. 블록마다 바로 밑에 블록이 있는지 확인한다. 단, 바로 밑이 자기 블록이 있는 좌표인 경우 제외

근데, 나중에 회전 같은걸 구현하기 위해서는 1번 방법이 가장 무난해 보인다.

그러면 시뮬레이션을 돌리는 board를 하나 추가하는게 편하지 않을까
어차피 블록 판은 500칸 정도인데, 매 틱마다 500번 연산이.. 조금 부담스럽긴 하다.
아니지, 시뮬레이션이 필요할 때만 블록 판을 초기화하면 상관없지 않을까

낙하할 때 simulationBoard = board 한 뒤 if(simulationBoard[blockQueue[0].y-1][blockQueue[0].x] == 0) 인 경우 simulationBoard[blockQueue[0].y-1][blockQueue[0].x] = blockCode 하는 거지
이 과정을 4칸 모두 수행한 뒤 문제 없으면 실제로 board에서도 실행시키는거지
simulationBoard[blockQueue[0].y-1][blockQueue[0].x] 이게 0이 아닌 경우는 즉시 return 0 등을 해서 바로 아래 블록이 있다! 를 전달한 뒤 블록 설치를 시행시키면 되는거고

또, 나중에 하드드랍 등을 구현할 때 모두 떨어질 때 까지 while로 돌리면 편할거고 좋아

결론은
1. 현재 조작하고 있는 블록을 blockQueue[4]에 저장한다. (x, y, code 값을 가진 block 변수에 저장한다.)
2. clock()을 이용해서 매 일정시간마다 블록이 1칸씩 낙하하도록 한다.
3. 낙하할 때, simulationBoard를 추가하여 바로 밑에 블록이 있는지 없는지 확인한다.
 3.1. 없는 경우 낙하한다.
 3.2. 있는 경우 설치한다. (blockExistence = 0으로 한다.)