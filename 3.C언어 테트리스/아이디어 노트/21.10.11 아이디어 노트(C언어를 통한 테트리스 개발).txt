일단 먼저 한 줄이 모두 채워지면 그 줄이 터지는 기능을 추가해 봅시다.
고려해볼 점은 크게 2가지로 나뉩니다.
1. 설치된 블록과 관련된 y좌표만 살펴본다.
2. 블록이 설치될 때 마다 모든 y좌표를 살펴본다.

1번으로 진행할 경우 연산을 최소화 할 수 있으나 약간 복잡해서 버그가 생길 수 있고
2번으로 진행할 경우 쉽지만, 불필요한 연산이 많이 필요하게 됩니다.

마침 블록을 설치할 때 마다 y좌표를 구하니 1번과정으로 진행을 해 봅시다.

일단 나중에 하드드롭때도 블록 설치를 할 테니
블록 설치 함수를 따로 만들고
y좌표를 매개변수로 받은 checkLine(int y)함수를 하나 만들어봅시다.

checkLine함수는
해당 y좌표의 board값들을 board[1~10][y]를 살펴본 뒤
모두 0이 아닌 경우 해당 줄을 제거하고
위에 블록들을 모두 밑으로 내리면 될거 같네요
이 때, 블록 설치와 동시에 진행되면 y좌표가 꼬이니까
블록 설치 함수에서 y좌표를 따로 정렬한 뒤 y좌표가 높은 순서로 호출하면
편하게 만들 수 있을듯 하네요 
가봅시다.

오케이, 줄없애기 구현 완료
이제 진짜 마지막으로 하드드롭만 구현하면 기본적인 테트리스 틀은
완성이다

하드드롭은 간단하게
blockMoveSimulation(blockQueue, 0, 0~)를 통해 0을 리턴하는 지점이 생기면
그 지점 -1칸에 설치되게 하면 된다. (landBlock을 통해)

가보자!

드디어.. 테트리스 기본을 완성했다.
이제 화면에 블록이 등장하고 한번은 움직여야 보이는 버그만 수정하고
현재 시간, 파괴한 줄의 수를 표시하도록 한 뒤
끝내자..!

드디어, 테트리스의 기본을 모두 완성했다