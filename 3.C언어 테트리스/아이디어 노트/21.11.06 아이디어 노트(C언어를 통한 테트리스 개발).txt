저번에는 시스템 적으로 hold, next를 구현했으니
이번에는 시각적으로 hold, next를 보여주도록 하자
일단, 게임을 한번 해보면서 hold, next를 어디에 보이게 할지 결정해보자


□□hold□□                          □□next□□
□    ■    □                          □	       □
□ ■■■  □                          □	       □
□□□□□□                          □---------□
	 □                          □	       □
             □                          □	       □
             □                          □---------□
             □                          □	       □
             □                          □	       □
             □                          □---------□
             □                          □	       □
             □                          □	       □
             □                          □---------□
             □                          □	       □
             □                          □	       □
             □                          □□□□□□
             □                          □
             □                          □
             □                          □
             □                          □
             □		     □
             □□□□□□□□□□□□

이런모양으로 진행하면 좋을 듯 하다.
hold, next에서 블록이 중앙에 올 수 있도록
printDouble에서 x값을 double로 받아서
x값이 두배로 되어도 한 칸만 띄어쓰기가 가능하도록 하고
기존 블록출력 위치를 전반적으로 바꾸도록 하자

블록 위치는 그때그때 정하도록 하고
settingGame, next, hold를 수정하자!
개발 해보자

후.. 생각보다 기존에 짜왔던 코드가 더럽고, 좌표 체계가 제대로 정립되어 있지 않아
간단한 구현이었음에도 1시간이라는 시간이 걸렸다.

어쨋든, 버그없이 깔끔하게 hold, next구현에 성공했다.